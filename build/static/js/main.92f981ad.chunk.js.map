{"version":3,"sources":["components/Filter/Filter.module.scss","components/ContactList/ContactList.module.scss","components/Section/Section.module.scss","components/Container/Container.module.scss","components/Button/ButtonTypeButton.module.scss","components/ContactForm/ContactForm.module.scss","components/Container/Container.js","components/ContactForm/ContactForm.js","components/Button/ButtonTypeButton.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Section/Section.js","components/App/App.js","index.js","components/ContactItem/ContactItem.module.scss"],"names":["module","exports","Container","children","className","s","ContactForm","contacts","onSubmit","useState","name","setName","number","setNumber","handleChange","e","target","value","reset","nameInputId","shortid","generate","numberInputId","form","preventDefault","normalizedName","toLowerCase","some","contact","alert","label","htmlFor","labelText","input","type","onChange","pattern","title","required","id","button","Button","onClick","defaultProps","ContactItem","wrapper","size","fill","ContactList","onDeleteContact","list","map","item","Filter","Section","section","App","filter","setFilter","JSON","parse","window","localStorage","getItem","setContacts","useEffect","console","log","setItem","stringify","visibleContacts","normalizedFilter","includes","getVisibleContacts","newContact","currentTarget","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92f981ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2vOqJ\",\"labelText\":\"Filter_labelText__3MyA-\",\"input\":\"Filter_input__vf463\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__1TlHv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__18FWb\",\"title\":\"Section_title__4Oz_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1A9B8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonTypeButton_button__OCuq5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__30QzL\",\"label\":\"ContactForm_label__7BxyA\",\"labelText\":\"ContactForm_labelText__2Lomr\",\"input\":\"ContactForm_input__1INw5\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./Container.module.scss\";\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={s.Container}>{children}</div>;\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport shortid from \"shortid\";\r\nimport s from \"./ContactForm.module.scss\";\r\n\r\nfunction ContactForm({ contacts, onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const normalizedName = name.toLowerCase();\r\n    if (\r\n      contacts.some(\r\n        (contact) =>\r\n          contact.name.toLowerCase() === normalizedName ||\r\n          contact.number === number\r\n      )\r\n    ) {\r\n      alert(\r\n        `Contact with such ${name} name or ${number} number is already in Phonebook`\r\n      );\r\n      reset();\r\n      return;\r\n    }\r\n\r\n    onSubmit(name, number);\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const nameInputId = shortid.generate();\r\n  const numberInputId = shortid.generate();\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.label} htmlFor={nameInputId}>\r\n        <span className={s.labelText}>Name</span>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          id={nameInputId}\r\n        />\r\n      </label>\r\n      <label className={s.label} htmlFor={numberInputId}>\r\n        <span className={s.labelText}>Number</span>\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          id={numberInputId}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.button}>\r\n        Add Contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      namber: PropTypes.number,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./ButtonTypeButton.module.scss\";\r\n\r\nconst Button = ({ children, onClick }) => (\r\n  <button type=\"button\" className={s.button} onClick={onClick}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\nButton.defaultProps = {\r\n  onClick: () => null,\r\n  children: null,\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Button;\r\n","import PropTypes from \"prop-types\";\r\nimport { BsFillPersonFill } from \"react-icons/bs\";\r\nimport s from \"./ContactItem.module.scss\";\r\n\r\nconst ContactItem = ({ name, number }) => (\r\n  <div className={s.wrapper}>\r\n    <BsFillPersonFill size=\"28\" fill=\"#87CEEB\" />\r\n    <p className={s.contact}>{name}</p>\r\n    <p className={s.contact}>{number}</p>\r\n  </div>\r\n);\r\n\r\nContactItem.propTypes = {\r\n  number: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import PropTypes from \"prop-types\";\r\nimport Button from \"../Button/ButtonTypeButton\";\r\nimport ContactItem from \"../ContactItem/ContactItem\";\r\nimport { ImBin } from \"react-icons/im\";\r\nimport s from \"./ContactList.module.scss\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul className={s.list}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li className={s.item} key={id}>\r\n        <ContactItem name={name} number={number} />\r\n        <Button onClick={() => onDeleteContact(name)}>\r\n          <ImBin /> Delete\r\n        </Button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.scss\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={s.label}>\r\n    <span className={s.labelText}>Find contacts by name</span>\r\n    <input\r\n      className={s.input}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    ></input>\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Section.module.scss\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <div className={s.section}>\r\n    <h2 className={s.title}>{title}</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React, { useState, useEffect } from \"react\";\n\nimport shortid from \"shortid\";\nimport Container from \"../Container/Container\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport ContactList from \"../ContactList/ContactList\";\nimport Filter from \"../Filter/Filter\";\nimport Section from \"../Section/Section\";\n\nfunction App() {\n  const [filter, setFilter] = useState(\"\");\n  const [contacts, setContacts] = useState(\n    () =>\n      JSON.parse(window.localStorage.getItem(\"contacts\")) ?? [\n        { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n        { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n        { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n        { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n      ]\n  );\n\n  useEffect(() => {\n    console.log(\"contacts useeffect\");\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (name, number) => {\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    setContacts([newContact, ...contacts]);\n    console.log(newContact, ...contacts);\n  };\n\n  const changeFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const deleteContact = (name) => {\n    setContacts(contacts.filter((contact) => contact.name !== name));\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <Container>\n      <Section title=\"Phonebook\">\n        <ContactForm onSubmit={addContact} contacts={contacts} />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter value={filter} onChange={changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={deleteContact}\n        />\n      </Section>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./styles/base.module.scss\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactItem_wrapper__3qMMd\",\"contact\":\"ContactItem_contact__3TA3q\"};"],"sourceRoot":""}